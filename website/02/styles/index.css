@charset "UTF-8";
/* Eric Meyer's Reset CSS v2.0 - http://cssreset.com */
@import "https://fonts.googleapis.com/css?family=Space+Mono";
html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
  margin: 0;
  padding: 0;
}

article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after, q:before, q:after {
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

html {
  box-sizing: border-box;
}

html, body {
  width: 100%;
  height: 100%;
  margin: 0;
  -webkit-text-size-adjust: none;
}

html, html a {
  -webkit-font-smoothing: antialiased;
  text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.004);
  -webkit-tap-highlight-color: transparent;
  -webkit-tap-highlight-color: transparent;
  -webkit-touch-callout: none;
}

*, *:before, *:after {
  box-sizing: inherit;
}

.svg-sprite {
  font-size: 1em;
}

.svg-sprite:before {
  content: ' ';
  background-image: url("../assets/images/spritesheet/svg/sprite.svg");
  background-repeat: no-repeat;
  background-size: 552px 20194px;
  display: inline-block;
}

.svg-sprite__instagram:before {
  background-position: 0px 0px;
  width: 552px;
  height: 552px;
}

.svg-sprite__snapchat:before {
  background-position: 0px -552px;
  width: 469px;
  height: 469px;
}

.svg-sprite__youtube:before {
  background-position: 0px -1021px;
  width: 462px;
  height: 462px;
}

.svg-sprite__wikipedia:before {
  background-position: 0px -1483px;
  width: 459px;
  height: 459px;
}

.svg-sprite__behance:before {
  background-position: 0px -1942px;
  width: 459px;
  height: 459px;
}

.svg-sprite__google-plus:before {
  background-position: 0px -2401px;
  width: 459px;
  height: 459px;
}

.svg-sprite__box:before {
  background-position: 0px -2860px;
  width: 458px;
  height: 458px;
}

.svg-sprite__soundcloud:before {
  background-position: 0px -3318px;
  width: 448px;
  height: 448px;
}

.svg-sprite__wordpress:before {
  background-position: 0px -3766px;
  width: 448px;
  height: 448px;
}

.svg-sprite__dropbox:before {
  background-position: 0px -4214px;
  width: 448px;
  height: 448px;
}

.svg-sprite__hi5:before {
  background-position: 0px -4662px;
  width: 440px;
  height: 440px;
}

.svg-sprite__yelp:before {
  background-position: 0px -5102px;
  width: 436px;
  height: 436px;
}

.svg-sprite__html-5:before {
  background-position: 0px -5538px;
  width: 435px;
  height: 435px;
}

.svg-sprite__vimeo:before {
  background-position: 0px -5973px;
  width: 435px;
  height: 435px;
}

.svg-sprite__reddit:before {
  background-position: 0px -6408px;
  width: 430px;
  height: 430px;
}

.svg-sprite__quora:before {
  background-position: 0px -6838px;
  width: 428px;
  height: 428px;
}

.svg-sprite__spotify:before {
  background-position: 0px -7266px;
  width: 428px;
  height: 428px;
}

.svg-sprite__deviantart:before {
  background-position: 0px -7694px;
  width: 427px;
  height: 427px;
}

.svg-sprite__dribbble:before {
  background-position: 0px -8121px;
  width: 426px;
  height: 426px;
}

.svg-sprite__foursquare:before {
  background-position: 0px -8547px;
  width: 423px;
  height: 423px;
}

.svg-sprite__whatsapp:before {
  background-position: 0px -8970px;
  width: 419px;
  height: 419px;
}

.svg-sprite__android:before {
  background-position: 0px -9389px;
  width: 414px;
  height: 414px;
}

.svg-sprite__pinterest:before {
  background-position: 0px -9803px;
  width: 413px;
  height: 413px;
}

.svg-sprite__stumbleupon:before {
  background-position: 0px -10216px;
  width: 413px;
  height: 413px;
}

.svg-sprite__twitter:before {
  background-position: 0px -10629px;
  width: 411px;
  height: 411px;
}

.svg-sprite__facebook:before {
  background-position: 0px -11040px;
  width: 409px;
  height: 409px;
}

.svg-sprite__bing:before {
  background-position: 0px -11449px;
  width: 407px;
  height: 407px;
}

.svg-sprite__periscope:before {
  background-position: 0px -11856px;
  width: 405px;
  height: 405px;
}

.svg-sprite__trello:before {
  background-position: 0px -12261px;
  width: 404px;
  height: 404px;
}

.svg-sprite__skype:before {
  background-position: 0px -12665px;
  width: 401px;
  height: 401px;
}

.svg-sprite__shutterstock:before {
  background-position: 0px -13066px;
  width: 397px;
  height: 397px;
}

.svg-sprite__myspace:before {
  background-position: 0px -13463px;
  width: 396px;
  height: 396px;
}

.svg-sprite__path:before {
  background-position: 0px -13859px;
  width: 396px;
  height: 396px;
}

.svg-sprite__medium:before {
  background-position: 0px -14255px;
  width: 394px;
  height: 394px;
}

.svg-sprite__howcast:before {
  background-position: 0px -14649px;
  width: 387px;
  height: 387px;
}

.svg-sprite__vine:before {
  background-position: 0px -15036px;
  width: 386px;
  height: 386px;
}

.svg-sprite__linkedin:before {
  background-position: 0px -15422px;
  width: 382px;
  height: 382px;
}

.svg-sprite__envato:before {
  background-position: 0px -15804px;
  width: 382px;
  height: 382px;
}

.svg-sprite__plaxo:before {
  background-position: 0px -16186px;
  width: 382px;
  height: 382px;
}

.svg-sprite__paypal:before {
  background-position: 0px -16568px;
  width: 373px;
  height: 373px;
}

.svg-sprite__amazon:before {
  background-position: 0px -16941px;
  width: 372px;
  height: 372px;
}

.svg-sprite__flickr:before {
  background-position: 0px -17313px;
  width: 363px;
  height: 363px;
}

.svg-sprite__creative-market:before {
  background-position: 0px -17676px;
  width: 356px;
  height: 356px;
}

.svg-sprite__scribd:before {
  background-position: 0px -18032px;
  width: 355px;
  height: 355px;
}

.svg-sprite__etsy:before {
  background-position: 0px -18387px;
  width: 353px;
  height: 353px;
}

.svg-sprite__tumblr:before {
  background-position: 0px -18740px;
  width: 352px;
  height: 352px;
}

.svg-sprite__buffer:before {
  background-position: 0px -19092px;
  width: 351px;
  height: 351px;
}

.svg-sprite__kickstarter:before {
  background-position: 0px -19443px;
  width: 348px;
  height: 348px;
}

.svg-sprite__delicious:before {
  background-position: 0px -19791px;
  width: 343px;
  height: 343px;
}

.svg-sprite__zero-logo:before {
  background-position: 0px -20134px;
  width: 56px;
  height: 60px;
}

/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
/*
These "retina group" variables are mappings for the naming and pairing of normal and retina sprites.

The list formatted variables are intended for mixins like `retina-sprite` and `retina-sprites`.
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
/*
The `retina-sprite` mixin sets up rules and a media query for a sprite/retina sprite.
  It should be used with a "retina group" variable.

The media query is from CSS Tricks: https://css-tricks.com/snippets/css/retina-display-media-query/

$icon-home-group: ('icon-home', $icon-home, $icon-home-2x, );

.icon-home {
  @include retina-sprite($icon-home-group);
}
*/
/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
/*
The `retina-sprites` mixin generates a CSS rule and media query for retina groups
  This yields the same output as CSS retina template but can be overridden in SCSS

@include retina-sprites($retina-groups);
*/
/*
*  --------------------------
*  Breakpoint body controller
*  --------------------------
*
*  @author : Fábio Azevedo < me@icantcontrolmyego.net >
*  @date   : September 2014
*
*  Instructions:
*
*      1. Check the default breakpoints defined at _breakpoints.scss.
*      2. Add a custom one if needed.
*      3. Eg:
*          @include respond-to((small));
*          or
*          @include respond-to((small medium));
*/
body:after {
  display: none;
}
@media screen and (max-width: 640px) {
  body:after {
    content: "small";
  }
}
@media screen and (min-width: 641px) and (max-width: 1024px) {
  body:after {
    content: "medium";
  }
}
@media screen and (min-width: 1025px) {
  body:after {
    content: "large";
  }
}

/*
*  ------------
*  Retina mixin
*  ------------
*
*  @author : Fábio Azevedo < me@icantcontrolmyego.net >
*  @date   : September 2014
*
*/
.version {
  position: absolute;
  bottom: 0;
  right: 0;
  font-size: 0.7em;
  pointer-events: none;
  overflow: hidden;
  z-index: 9998;
}
@media screen and (max-width: 640px) {
  .version {
    font-size: 0.5em;
  }
}
.version .container {
  display: table;
  width: 100%;
  background-color: rgba(0, 0, 0, 0.5);
  transform: translate3d(0, 0, 0.01px);
  transition: transform 0.4s;
  pointer-events: auto;
}
.version .container .button {
  display: table-cell;
  padding: 10px 14px;
  background-color: #666;
  cursor: pointer;
  transform: translate3d(0, 0, 0.01px);
  transition: transform 0.4s;
}
.version .container .button:before {
  content: '-';
}
.version .container .content {
  display: table-cell;
  padding: 10px 14px;
  transform: translate3d(0, 0, 0.01px);
}
.version .container .content span {
  font-weight: bold;
}
.version.collapsed .container {
  transform: translate3d(100%, 0, 0.01px);
}
.version.collapsed .container .button {
  transform: translate3d(-100%, 0, 0.01px);
}
.version.collapsed .container .button:before {
  content: "+";
}

.unsupported {
  position: absolute;
  z-index: 9997;
  width: 100%;
  height: 100%;
  background: black;
  display: none;
}
.unsupported .unsupported-content {
  display: table-cell;
  vertical-align: middle;
  text-align: center;
  line-height: 1.6em;
}
.not-supported .unsupported {
  display: table;
}

body {
  font-family: "Space Mono", monospace;
  font-size: 14px;
  color: #FFF;
  background-color: #000;
  transition: background-color 0.5s;
}

#app canvas {
  position: absolute;
  top: 0;
  left: 0;
}
#app canvas#letter {
  z-index: 100;
  position: absolute;
  right: 0;
  top: 0;
  left: auto;
  display: none;
}

.info {
  z-index: 101;
  position: absolute;
  top: 60px;
  left: 60px;
}
@media screen and (max-width: 640px) {
  .info {
    top: 20px;
    left: 20px;
    width: 70%;
  }
}
.info .button {
  background-color: #000;
  color: #aaa;
  display: inline-block;
  padding: 10px;
  cursor: pointer;
}
.info .button:before {
  content: '-';
}
.info .link {
  margin-top: 20px;
  background-color: #ff3333;
  color: #000;
  display: inline-block;
  padding: 10px;
  font-size: 0.85em;
}
.info .link a {
  text-decoration: none;
  color: #000;
}
.info .description {
  padding: 20px;
  background: black;
}
.info .description h1 {
  font-size: 1.2em;
  text-transform: uppercase;
  color: #666;
  line-height: 1.8em;
}
.info .description h4 {
  color: #aaa;
  font-size: 0.85em;
  text-transform: uppercase;
}
.info .description .instructions {
  margin-top: 16px;
}
.info .description .instructions p {
  font-size: 0.85em;
  line-height: 1.8em;
}
.info .description .instructions i {
  color: #666;
}
.info.collapsed .button {
  background-color: #ff3333;
  color: #000;
}
.info.collapsed .button:before {
  content: '+';
}
.info.collapsed .description {
  display: none;
}

#app {
  position: absolute;
  width: 100%;
  height: 100%;
  overflow: hidden;
}
